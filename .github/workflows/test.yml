name: MariaDB service example
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      dbgfo:
        # Docker Hub image
        image: mariadb:latest
        # Provide the password for postgres
        env:
          MARIADB_ROOT_PASSWORD: 2021aminum%
          MARIADB_DATABASE: chess
          MARIADB_USER: appchess
          MARIADB_PASSWORD: Chess,aminum2021
        # Set health checks to wait until postgres has started
        options: >-
           --expose 3306
        #  --health-cmd pg_isready
        #  --health-interval 10s
        #  --health-timeout 5s
        #  --health-retries 5
      steps:
        - name: test1
          run: /usr/bin/docker ps -a

    steps:

      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Connect to MariaDB
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: node src/main.js
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          # POSTGRES_HOST: dbgfo
          # The default PostgreSQL port
          # POSTGRES_PORT: 3306
          LOGLEVEL: debug
          DB_HOST: dbgfo
          DB_PORT: 3306
          DB_USER: appchess
          DB_PASSWORD: Chess,aminum2021
          DB_DATABASE: chess